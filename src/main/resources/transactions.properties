transaction.names=location.sync
location.sync.query=SELECT cf$_log_id, cf$_log_timestamp, cf$_log_type, cf$_action_code, cf$_type, cf$_id, cf$_name, cf$_note, cf$_parent1_type, cf$_parent1_id, cf$_parent2_type, cf$_parent2_id FROM IFSAPP.SOLINT_LOCATION_LOG_CLV WHERE cf$_process_flag = :STATE  ORDER BY cf$_log_id
location.sync.sendq=com.ibaset.receive.request.location
location.sync.mapperFunction=com.kickass.ifssol.mapper.SyncLocationMapper
location.sync.updateStatus=true
location.sync.cronExpression=*/600 * * * * *
location.sync.updateStatement= DECLARE \
param_log_id_ NUMBER;  \
info_                  VARCHAR2(32000); \
objid_                 VARCHAR2(32000); \
objversion_            VARCHAR2(32000); \
attr_                  VARCHAR2(32000); \
CURSOR get_record (log_id_ NUMBER) IS \
SELECT t.objid, t.objversion \
FROM IFSAPP.SOLINT_LOCATION_LOG_CLV t \
WHERE cf$_log_id = log_id_; \
BEGIN \
Param_log_id_ := :LOG_ID; \
OPEN get_record (param_log_id_); \
FETCH get_record INTO objid_, objversion_; \
CLOSE get_record; \
IF objid_ IS NOT NULL THEN \
Client_SYS.Clear_Attr(attr_); \
Client_SYS.Add_To_Attr('CF$_PROCESS_FLAG', 'DONE', attr_); \
IFSAPP.SOLINT_LOCATION_LOG_CLP.Modify__(info_, objid_, objversion_, attr_, 'DO'); \
END IF; \
END;